// ------------------------------------------------------------------------------
//  <autogenerated>
//      This code was generated by the Game Data Editor.
//
//      Changes to this file will be lost if the code is regenerated.
//  </autogenerated>
// ------------------------------------------------------------------------------
using UnityEngine;
using System;
using System.Collections.Generic;

using GameDataEditor;

namespace GameDataEditor
{
    public class GDEWeaponComponentData : IGDEData
    {
        private static string CanUpgradeKey = "CanUpgrade";
		private bool _CanUpgrade;
        public bool CanUpgrade
        {
            get { return _CanUpgrade; }
            set {
                if (_CanUpgrade != value)
                {
                    _CanUpgrade = value;
                    GDEDataManager.SetBool(_key+"_"+CanUpgradeKey, _CanUpgrade);
                }
            }
        }

        private static string IdKey = "Id";
		private int _Id;
        public int Id
        {
            get { return _Id; }
            set {
                if (_Id != value)
                {
                    _Id = value;
                    GDEDataManager.SetInt(_key+"_"+IdKey, _Id);
                }
            }
        }

        private static string ComponentNameKey = "ComponentName";
		private string _ComponentName;
        public string ComponentName
        {
            get { return _ComponentName; }
            set {
                if (_ComponentName != value)
                {
                    _ComponentName = value;
                    GDEDataManager.SetString(_key+"_"+ComponentNameKey, _ComponentName);
                }
            }
        }

        private static string WeaponAttrsKey = "WeaponAttrs";
		public List<GDEWeaponAttributeData>      WeaponAttrs;
		public void Set_WeaponAttrs()
        {
	        GDEDataManager.SetCustomList(_key+"_"+WeaponAttrsKey, WeaponAttrs);
		}
		

        public GDEWeaponComponentData()
		{
			_key = string.Empty;
		}

		public GDEWeaponComponentData(string key)
		{
			_key = key;
		}
		
        public override void LoadFromDict(string dataKey, Dictionary<string, object> dict)
        {
            _key = dataKey;

			if (dict == null)
				LoadFromSavedData(dataKey);
			else
			{
                dict.TryGetBool(CanUpgradeKey, out _CanUpgrade);
                dict.TryGetInt(IdKey, out _Id);
                dict.TryGetString(ComponentNameKey, out _ComponentName);

                dict.TryGetCustomList(WeaponAttrsKey, out WeaponAttrs);
                LoadFromSavedData(dataKey);
			}
		}

        public override void LoadFromSavedData(string dataKey)
		{
			_key = dataKey;
			
            _CanUpgrade = GDEDataManager.GetBool(_key+"_"+CanUpgradeKey, _CanUpgrade);
            _Id = GDEDataManager.GetInt(_key+"_"+IdKey, _Id);
            _ComponentName = GDEDataManager.GetString(_key+"_"+ComponentNameKey, _ComponentName);

            WeaponAttrs = GDEDataManager.GetCustomList(_key+"_"+WeaponAttrsKey, WeaponAttrs);
         }

        public void Reset_CanUpgrade()
        {
            GDEDataManager.ResetToDefault(_key, CanUpgradeKey);

            Dictionary<string, object> dict;
            GDEDataManager.Get(_key, out dict);
            dict.TryGetBool(CanUpgradeKey, out _CanUpgrade);
        }

        public void Reset_Id()
        {
            GDEDataManager.ResetToDefault(_key, IdKey);

            Dictionary<string, object> dict;
            GDEDataManager.Get(_key, out dict);
            dict.TryGetInt(IdKey, out _Id);
        }

        public void Reset_ComponentName()
        {
            GDEDataManager.ResetToDefault(_key, ComponentNameKey);

            Dictionary<string, object> dict;
            GDEDataManager.Get(_key, out dict);
            dict.TryGetString(ComponentNameKey, out _ComponentName);
        }

        public void Reset_WeaponAttrs()
		{
			GDEDataManager.ResetToDefault(_key, WeaponAttrsKey);

			Dictionary<string, object> dict;
			GDEDataManager.Get(_key, out dict);

			dict.TryGetCustomList(WeaponAttrsKey, out WeaponAttrs);
			WeaponAttrs = GDEDataManager.GetCustomList(_key+"_"+WeaponAttrsKey, WeaponAttrs);

			WeaponAttrs.ForEach(x => x.ResetAll());
		}

        public void ResetAll()
        {
            GDEDataManager.ResetToDefault(_key, IdKey);
            GDEDataManager.ResetToDefault(_key, ComponentNameKey);
            GDEDataManager.ResetToDefault(_key, WeaponAttrsKey);
            GDEDataManager.ResetToDefault(_key, CanUpgradeKey);

            Reset_WeaponAttrs();

            Dictionary<string, object> dict;
            GDEDataManager.Get(_key, out dict);
            LoadFromDict(_key, dict);
        }
    }
}
